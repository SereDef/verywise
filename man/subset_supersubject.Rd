% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_supersubject.R
\name{subset_supersubject}
\alias{subset_supersubject}
\title{Subset an existing supersubject matrix by matching folder IDs}
\usage{
subset_supersubject(
  supsubj_dir,
  supsubj_file,
  folder_ids,
  error_cutoff = 20,
  new_supsubj_dir,
  n_cores = 1,
  save_rds = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{supsubj_dir}{Character string indicating the path to the directory
containing the supersubject files (i.e the supersubject matrix itself as a
\code{.rds} file, and the associated \code{.bk} and \code{.rownames.csv}
files).}

\item{supsubj_file}{Character string indicating the name of the supersubject
\code{.rds} file. Must follow the naming pattern
\code{"<hemi>.<measure>.<fs_template>.supersubject.rds"}.}

\item{folder_ids}{Character vector of folder IDs to retain in the new ss
matrix. This should also be a column in the phenotype dataset.}

\item{error_cutoff}{Integer indicating the maximum number of missing IDs that
is allowed before the function throws an error. If the number of missing IDs
is \code{ <= error_cutoff }, a warning is issued instead.
Default: 20.}

\item{new_supsubj_dir}{Character string indicating the path to the directory
where the new supersubject files should be stored (either temporarily or
permanently if \code{ save_rds == TRUE }. Created if it does not exist.}

\item{n_cores}{Integer indicating the number of cores to use for parallel
processing.}

\item{save_rds}{Logical. If \code{TRUE}, the new ss is also saved to a
\code{.rds} file inside \code{new_supsubj_dir}.}

\item{verbose}{Logical. Default: \code{TRUE}.}
}
\value{
A \link[bigstatsr]{FBM} object containing the subsetted supersubject matrix.
}
\description{
This function subsets a \link[bigstatsr]{FBM} supersubject matrix that was
created using \code{\link[=build_supersubject]{build_supersubject()}}, retaining only the rows that
correspond to a set of folder (or row) IDs.
It reads row names from an associated \code{.csv} file, checks for missing IDs,
and writes logs if any are not found. The new subsetted matrix can be saved
for future use.
}
\details{
The function performs the following steps:
\enumerate{
\item Reads row names from the supersubject's \code{.csv} file.
\item Checks whether all \code{folder_ids} exist in the supersubject.
\item Logs missing IDs to \code{issues.log} in \code{new_supsubj_dir}.
\item If the number of missing IDs exceeds \code{error_cutoff}, stops with an error.
\item Creates a new FBM with only the matching rows, writing it blockwise to
avoid excessive RAM usage.
\item Writes the filtered row names to \code{ss.rownames.csv} in \code{new_supsubj_dir}.
}
}
\seealso{
\link{build_supersubject}
}
